generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    String  @id @default(ulid())
  first_name String
  last_name  String
  password   String
  email      String  @unique

  // Relations
  user_roles    UserRole[]
  user_jobtitle UserJobTitle[]
  indicators    Indicator[]

  @@map("users")
}

model Role {
  role_id String @id @default(ulid())
  name    String

  // Relations
  user_roles UserRole[]

  @@map("roles")
}

model UserRole {
  user_id String
  role_id String

  // Relations
  user User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  role Role @relation(fields: [role_id], references: [role_id], onDelete: Cascade)

  @@id([user_id, role_id])
  @@map("user_roles")
}

model JobTitle {
  jobtitle_id String @id @default(ulid())
  name        String

  // Relations
  user_jobtitle        UserJobTitle[]
  responsible_jobtitle ResponsibleJobTitle[]
  
  @@map("job_titles")
}

model UserJobTitle {
  user_id     String
  jobtitle_id String

  // Relations
  user     User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  jobtitle JobTitle @relation(fields: [jobtitle_id], references: [jobtitle_id], onDelete: Cascade)

  @@id([user_id, jobtitle_id])
  @@map("user_job_titles")
}

model Category {
  category_id String    @id @default(ulid())
  name        String
  description String?
  user_id     String
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt

  // Relations
  indicators Indicator[]

  @@map("categories")
}

model Indicator {
  indicator_id      String   @id @default(ulid())
  name              String
  target_value      Float?
  unit_id           String
  frequency_id      String
  created_at        DateTime @default(now())
  status            String   @default("Active")
  main_indicator_id String?
  category_id       String
  user_id           String
  position          Int

  // --- Corrected Self-Relation ---
  main_indicator Indicator?  @relation("MainSubIndicators", fields: [main_indicator_id], references: [indicator_id], onDelete: Cascade)
  sub_indicators Indicator[] @relation("MainSubIndicators")

  // Relations
  category            Category             @relation(fields: [category_id], references: [category_id], onDelete: Cascade)
  user                User                 @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  frequency           Frequency            @relation(fields: [frequency_id], references: [frequency_id], onDelete: Cascade)
  unit                Unit                 @relation(fields: [unit_id], references: [unit_id], onDelete: Cascade)
  responsible_jobtitle ResponsibleJobTitle[]
  indicator_data      IndicatorData[] 

  @@unique([category_id, position, main_indicator_id], map: "indicator_position_unique")

  @@map("indicators")
}

model ResponsibleJobTitle {
  indicator_id String
  jobtitle_id  String

  // Relations
  indicator Indicator @relation(fields: [indicator_id], references: [indicator_id], onDelete: Cascade)
  jobtitle  JobTitle  @relation(fields: [jobtitle_id], references: [jobtitle_id], onDelete: Cascade)

  @@id([indicator_id, jobtitle_id])
  @@map("responsible_jobTitles")
}

model Frequency {
  frequency_id    String @id @default(ulid())
  name            String
  periods_in_year Int    @default(1)
  
  // Relations
  indicators Indicator[]
  periods    Period[]
  
  @@map("frequencies")
}

model Period {
  period_id    String   @id @default(ulid())
  name         String
  start_date   DateTime
  end_date     DateTime
  notification_date DateTime
  frequency_id String
  
  // Relations
  frequency Frequency @relation(fields: [frequency_id], references: [frequency_id], onDelete: Cascade)
  
  indicator_data IndicatorData[]
  
  @@map("periods")
}

model IndicatorData {
  indicator_id     String
  period_id        String
  actual_value     Float?
  created_at       DateTime  @default(now())
  updated_at       DateTime? @updatedAt

  // Relations
  indicator Indicator @relation(fields: [indicator_id], references: [indicator_id], onDelete: Cascade)
  period    Period    @relation(fields: [period_id], references: [period_id], onDelete: Cascade)

  @@id([indicator_id, period_id])
  @@map("indicator_data")
}

model Unit {
  unit_id String @id @default(ulid())
  name    String 

  // Relations
  indicators Indicator[]

  @@map("units")
}
